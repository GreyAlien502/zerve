#!/usr/bin/env python3 
import math
import time
import datetime
import os
import sys
import json
import urllib

import life.commands
import life.basiccommands as base
import commands


def send(destination,content):
	block_size = 2300
	checkconnection=False
	if len(content) < block_size:
		base.chat(destination,'0'+content,'')
	else:
		blocked_size = block_size*math.floor(len(content)/block_size)
		lecian = [content[i:i+block_size] for i in range(block_size,len(content)-block_size,block_size)]
		
		base.chat(destination,'1'+content[:block_size],'')
		for lecian_item in lecian:
			base.chat(destination,'1'+lecian_item,'')
		base.chat(destination,'0'+content[blocked_size:],'')


def process(content):
	sendback = content['sendback']
	username = content['username']
	password = content['password']
	command  = content['command' ]

	if (commands.checkCreds(username,password)):
		print(content)
		if command == 'login':
			output = commands.login(content)
		if command == 'home':
			output = commands.home(content)
		if command == 'posts':
			output = commands.posts(content)
		if command == 'post':
			output = commands.post(content)
		if command == 'comments':
			output = commands.comments(content)
		if command == 'comment':
			output = commands.comment(content)
		if command == 'files':
			output = commands.files(content)
		if command == 'addFile':
			output = commands.addFile(content)
		if command == 'removeFile':
			output = commands.removeFile(content)
		if command == 'renameFile':
			output = commands.renameFile(content)
		if command == 'editFile':
			output = commands.editFile(content)
		if command == 'preferences':
			output = commands.preferences(content)
		if command == 'preference':
			output = commands.preference(content)
		if command == 'cat':
			output = commands.cat(content)
		send(sendback,json.dumps(output))
	else:
		base.chat(sendback,'"You have not entered a correct password. You can log in. If you do not have an account or can not remember the password feel free to use the guest account (guest, guest)."')

hat = "zerving_hat"
print ('working')
while True:
	sys.stdout.write('.')
	sys.stdout.flush()
	try:
		response = base.keep(hat)
	except:
		response = []
	if 'events' in response:
		print()
		for event in response['events']:
			if event['type'] == 'disconnect':
				process(json.loads(event['from']))
				'''.log(
					"@"+datetime.datetime.utcnow()+' '+
					event['command']+":"+
					event['user'])'''
	time.sleep(.4)
